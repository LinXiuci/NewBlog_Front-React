{"version":3,"file":"static/js/807.909120a2.chunk.js","mappings":"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","sources":["views/Album/components/lazyImage-component.tsx","views/Album/page/detailed-page.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\ntype LazyImageProps = {\r\n  src: string;\r\n  currentImageIndex: number;\r\n  handleOpenPreview: (event: React.MouseEvent<HTMLImageElement, globalThis.MouseEvent>, index: number) => void;\r\n};\r\n/**\r\n * @description 组件：图片懒加载\r\n * @param {Object} props src:图片资源，currentImageIndex：获取当前图片的下标，handleOpenPreview：根据 currentIndex 打开图片\r\n *  */\r\nfunction LazyImageComponent({ src, currentImageIndex, handleOpenPreview }: LazyImageProps) {\r\n  // 操作图片元素\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  // 图片是否加载完毕\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && imageRef.current) {\r\n          const img = new Image();\r\n          img.src = src;\r\n          img.onload = () => {\r\n            if (imageRef.current) {\r\n              imageRef.current.src = src;\r\n              setIsLoading(false);\r\n              observer.unobserve(imageRef.current);\r\n            }\r\n          };\r\n        }\r\n      });\r\n    });\r\n\r\n    if (imageRef.current) observer.observe(imageRef!.current);\r\n\r\n    return () => {\r\n      if (imageRef.current) observer.unobserve(imageRef!.current);\r\n    };\r\n  }, [src]);\r\n\r\n  return (\r\n    <div className=\"app-album-image-lazy-component\">\r\n      {isLoading && <div className=\"app-album-lazy-image-loading\">Loading...</div>}\r\n      <img\r\n        style={{ opacity: isLoading ? 0 : 1 }}\r\n        data-src={src}\r\n        ref={imageRef}\r\n        onClick={(e) => handleOpenPreview(e, currentImageIndex)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LazyImageComponent;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, NavigateFunction, useSearchParams } from \"react-router-dom\";\r\n\r\nimport LazyImageComponent from \"../components/lazyImage-component\";\r\nimport { getImageResources } from \"../../../api/app-album-api\";\r\nimport \"../css/detailed-page.css\";\r\n\r\ninterface DetailedResultType {\r\n  key: string;\r\n  title: string;\r\n  url: string;\r\n  images: ImageType[];\r\n}\r\ninterface ImageType {\r\n  key: string;\r\n  src: string;\r\n}\r\n/**\r\n * @description 图片详细页\r\n *  */\r\nfunction DetailedPage() {\r\n  // 导航跳转\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const [params] = useSearchParams();\r\n  // 存储图片\r\n  const [data, setData] = useState<ImageType[]>([]);\r\n\r\n  const fetchResults = async () => {\r\n    const key: string | null = params.get(\"key\");\r\n    if (key !== null) {\r\n      const { results } = await getImageResources<DetailedResultType>(key);\r\n      // 解析 images 数组\r\n      const [element] = results;\r\n      setData(element.images);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, []);\r\n\r\n  //当前页数\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // 根据当前页数显示内容\r\n  const pageDisplayContent = data.slice((currentPage - 1) * 6, currentPage * 6);\r\n  // 设置总页数\r\n  const totalPage = Math.ceil(data.length / 6);\r\n\r\n  // 记录当前图片的下标\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  // 用于是否预览框\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // 用于获取预览框的容器元素\r\n  const previewContainerRef = useRef<HTMLImageElement>(null);\r\n\r\n  // 上一页\r\n  const handlePreviousClick = (): void => {\r\n    let newIndex = currentPage - 1;\r\n    if (newIndex < 1) return;\r\n    setCurrentPage(newIndex);\r\n  };\r\n\r\n  // 下一页\r\n  const handleNextClick = (): void => {\r\n    const newIndex = currentPage + 1;\r\n    if (newIndex > totalPage) return;\r\n    setCurrentPage(newIndex);\r\n  };\r\n\r\n  // 打开预览，根据下标 index 打开预览图片\r\n  const handleOpenPreview = (event: React.MouseEvent<HTMLImageElement, globalThis.MouseEvent>, index: number) => {\r\n    event.preventDefault();\r\n    setCurrentImageIndex(index);\r\n    setIsOpen(true);\r\n    document.body.style.overflowY = \"hidden\";\r\n  };\r\n\r\n  // 关闭预览\r\n  const handleClosePreview = () => {\r\n    setIsOpen(false);\r\n    document.body.style.overflowY = \"scroll\";\r\n  };\r\n\r\n  // 判断鼠标点击位置是否在容器元素内，如果是，则不关闭预览框，否则关闭预览框。\r\n  const handleOutsideClick = (e: MouseEvent) => {\r\n    if (previewContainerRef.current?.contains(e.target as Node)) return;\r\n    // 关闭预览框\r\n    handleClosePreview();\r\n  };\r\n\r\n  // 监听全局鼠标点击事件，如果点击了overlay，则关闭预览框\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.addEventListener(\"mousedown\", handleOutsideClick as unknown as EventListener);\r\n    } else {\r\n      document.removeEventListener(\"mousedown\", handleOutsideClick as unknown as EventListener);\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleOutsideClick as unknown as EventListener);\r\n    };\r\n  }, [isOpen, handleOutsideClick]);\r\n\r\n  const isPreviousDisabled = currentPage === 1;\r\n  const isNextDisabled = currentPage === totalPage;\r\n  return (\r\n    <main className=\"app-album-detail-page\">\r\n      {/* 导航区 */}\r\n      <header className=\"app-album-detial-page-header\">\r\n        <span onClick={() => navigate(-1)}>&gt;</span>\r\n      </header>\r\n      {/* 展示图片区 */}\r\n      <article className=\"app-album-image-container\">\r\n        {pageDisplayContent.map(({ key, src }, index) => (\r\n          <LazyImageComponent\r\n            key={key}\r\n            src={src}\r\n            currentImageIndex={index}\r\n            handleOpenPreview={handleOpenPreview}\r\n          ></LazyImageComponent>\r\n        ))}\r\n      </article>\r\n      {/* 分布按扭区 */}\r\n      <footer className=\"app-album-detial-page-footer\">\r\n        <button\r\n          style={{ color: isPreviousDisabled ? \"var(--app-text-tags)\" : \"\" }}\r\n          onClick={handlePreviousClick}\r\n          disabled={isPreviousDisabled}\r\n        >\r\n          &lt;\r\n        </button>\r\n        <button\r\n          style={{ color: isNextDisabled ? \"var(--app-text-tags)\" : \"\" }}\r\n          onClick={handleNextClick}\r\n          disabled={isNextDisabled}\r\n        >\r\n          &gt;\r\n        </button>\r\n      </footer>\r\n      {/* 展示预览图片 */}\r\n      {isOpen && (\r\n        <article className=\"app-album-preview-overlay\">\r\n          <img\r\n            className=\"app-album-preview-container\"\r\n            src={pageDisplayContent[currentImageIndex].src}\r\n            ref={previewContainerRef}\r\n          />\r\n          <button className=\"app-album-preview-close\" onClick={handleClosePreview}>\r\n            关闭\r\n          </button>\r\n        </article>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default DetailedPage;\r\n"],"names":["_ref","src","currentImageIndex","handleOpenPreview","imageRef","useRef","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","img","Image","onload","unobserve","observe","_jsxs","className","children","_jsx","style","opacity","ref","onClick","e","navigate","useNavigate","_useSearchParams","useSearchParams","params","data","setData","fetchResults","_asyncToGenerator","_regeneratorRuntime","mark","_callee","key","_yield$getImageResour","results","_results","element","wrap","_context","prev","next","get","getImageResources","sent","images","stop","apply","arguments","_useState3","_useState4","currentPage","setCurrentPage","pageDisplayContent","slice","totalPage","Math","ceil","length","_useState5","_useState6","setCurrentImageIndex","_useState7","_useState8","isOpen","setIsOpen","previewContainerRef","event","index","preventDefault","document","body","overflowY","handleClosePreview","handleOutsideClick","_previewContainerRef$","contains","target","addEventListener","removeEventListener","isPreviousDisabled","isNextDisabled","map","_ref2","LazyImageComponent","color","newIndex","disabled"],"sourceRoot":""}